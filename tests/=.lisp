#!/usr/bin/env ol
(import (otus algebra))

; direct equality
(assert          12345    =          12345    )
(assert         "12345"   =         "12345"   )
(assert 99999999999999999 = 99999999999999999 )
(assert         [1 2 3]   =         [1 2 3]   )
(assert         [1 2 3]   = (Array  [1 2 3])  )
(assert         [1 2 3]   = (Array~ [1 2 3])  )
(assert (Array  [1 2 3])  =         [1 2 3]   )
(assert (Array  [1 2 3])  = (Array  [1 2 3])  )
(assert (Array  [1 2 3])  = (Array~ [1 2 3])  )
(assert (Array~ [1 2 3])  =         [1 2 3]   )
(assert (Array~ [1 2 3])  = (Array  [1 2 3])  )
(assert (Array~ [1 2 3])  = (Array~ [1 2 3])  )

; =
(assert (= 1))
(assert (= 1 1))
(assert (= 1 1 1))
(assert (= 1 1 1 1))
(assert (= 1 1 1 1 1 1 1 1 1 1 1 1))
(assert (= []))
(assert (= [] []))
(assert (= [] [] []))
(assert (= [] [] [] []))
(assert (= [] [] [] [] [] [] [] [] [] [] [] []))
(assert (= [1]))
(assert (= [1] [1]))
(assert (= [1] [1] [1]))
(assert (= [1] [1] [1] [1]))
(assert (= [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1]))

(assert (= [1 2 3]))
(assert (= [1 2 3] [1 2 3]))
(assert (= [1 2 3] [1 2 3] [1 2 3]))
(assert (= [1 2 3] [1 2 3] [1 2 3] [1 2 3]))
(assert (= [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3] [1 2 3]))

(assert (= [[1 2] [3 4]]))
(assert (= [[1 2] [3 4]] [[1 2] [3 4]]))
(assert (= [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]]))
(assert (= [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]]))
(assert (= [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]]
           [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]]
           [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]] [[1 2] [3 4]]))

(define x [[[[1 2] [3 4]] [[5 6] [7 8]]]
           [[[1 2] [3 4]] [[5 6] [7 8]]]
           [[[1 2] [3 4]] [[5 6] [7 8]]]])
(define y [1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8])
(assert (= (Reshape x '(24)) y))
(assert (≠ x y))
(assert (= x (Reshape y (Shape x))))

; ≠
(assert (≠ [] 0))
(assert (≠ [1] 1))
(assert (≠ [1] []))
(assert (≠ [] [] [] [] [] [] [] [] [] [] [] [1]))
(assert (≠ [] [] [] [] [1] [] [] [] [] [] [] []))
(assert (≠ [1] [] [] [] [] [] [] [] [] [] [] []))

; ~
(assert (= [1 2 3] (Array~ [1 2 3])))
(assert (= [1 2 3] (Array~ [1 2 3]) (Array~ [1 2 3])))
(assert (= [1 2 3] (Array~ [1 2 3])
           [1 2 3] (Array~ [1 2 3])
           [1 2 3] (Array~ [1 2 3])
           [1 2 3] (Array~ [1 2 3])
           [1 2 3] (Array~ [1 2 3])
           [1 2 3] (Array~ [1 2 3])))

(assert (≡ [1 2 3] [1 2 3]))
(assert (≢ [1 2 3] (Array~ [1 2 3])))
(assert (≡ [#i1 #i2 #i3] [#i1 #i2 #i3]))
(assert (≢ [#e1 #e2 #e3] [#i1 #i2 #i3]))



; well, done.
(print "ok.")
